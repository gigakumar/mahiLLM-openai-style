syntax = "proto3";

package assistant.v1;

message Message {
  string role = 1; // "user" | "assistant" | "system"
  string content = 2;
}

message ChatRequest {
  repeated Message messages = 1;
}

message ChatDelta {
  string token = 1; // streamed token chunk
  bool done = 2;    // set true on stream completion
}

message ChatResponse {
  oneof event {
    ChatDelta delta = 1;
    string system = 2;
  }
}

message PlanRequest {
  string goal = 1;
  map<string, bool> sources = 2; // email/calendar/messages/browser
}

message PlanStep {
  string step = 1;
  string action = 2;
}

message Plan {
  string mode = 1;                 // e.g., "on-device"
  repeated string outputs = 2;     // e.g., drafts, events
  repeated string sources = 3;     // enabled sources
  repeated PlanStep steps = 4;     // planned actions
}

message PlanResponse {
  Plan plan = 1;
}

service Assistant {
  rpc Chat(ChatRequest) returns (stream ChatResponse);
  rpc Plan(PlanRequest) returns (PlanResponse);
}
